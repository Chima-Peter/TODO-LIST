{"version":3,"file":"bundle.657204e5aae9242b40f9.js","mappings":"oBAEa,WACX,MAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAQH,SAASC,cAAc,UAC/BG,EAASJ,SAASC,cAAc,WAChCI,EAAQL,SAASC,cAAc,UAC/BK,EAAa,eAEnBJ,EAAMK,iBAAiB,SAAS,KACF,IAAvBL,EAAMM,MAAMC,QAAmBC,EAAgBR,GAGzCA,EAAMS,SAASC,OACxBV,EAAMW,GAAK,QACXT,EAAOU,YAAc,IAErBC,KANAb,EAAMW,GAAK,UACXT,EAAOU,YAAc,6FAMtB,IAEHX,EAAMI,iBAAiB,SAAS,KAC1BJ,EAAMQ,SAASC,OACjBT,EAAMU,GAAK,QACXR,EAAMS,YAAc,IAEpBE,GACD,IAEHjB,EAAKQ,iBAAiB,UAAWU,IAC1Bf,EAAMS,SAASC,MAGRT,EAAMQ,SAASC,QACzBI,IACAC,EAAMC,mBAJNH,IACAE,EAAMC,iBAIP,IAEH,MAAMH,EAAe,KACfb,EAAMS,SAASQ,cACjBjB,EAAMW,GAAK,UACXT,EAAOU,YAAc,6BACZZ,EAAMS,SAASS,WACxBlB,EAAMW,GAAK,UACXT,EAAOU,YAAc,gCAAgCZ,EAAMmB,uCAAuCnB,EAAMM,MAAMC,SAC/G,EAEGO,EAAmB,KACnBb,EAAMQ,SAASQ,cACjBhB,EAAMU,GAAK,UACXR,EAAMS,YAAc,6BACXX,EAAMQ,SAASS,UACxBjB,EAAMU,GAAK,UACXR,EAAMS,YAAc,gCAAgCX,EAAMkB,uCAAuClB,EAAMK,MAAMC,UACpGN,EAAMQ,SAASW,eACxBnB,EAAMU,GAAK,UACXR,EAAMS,YAAc,2CACtB,EAEIJ,EAAmBa,GACPjB,EAAWkB,KAAKD,EAAKf,MAGxC,CA7DY,E","sources":["webpack://todo-list/./src/js/form.js"],"sourcesContent":["import \"../css/form.css\";\r\n\r\nconst Form = (function () {\r\n  const form = document.querySelector('form');\r\n  const fname = document.querySelector('#fname');\r\n  const email = document.querySelector('#email');\r\n  const ferror = document.querySelector('#ferror');\r\n  const error = document.querySelector('#error');\r\n  const nameRegExp = /^[a-zA-Z ]+$/;\r\n\r\n  fname.addEventListener('input', () => {\r\n    if ((fname.value.length !== 0) && (!checkNameRegExp(fname))) {\r\n      fname.id = 'invalid';\r\n      ferror.textContent = 'First Name field should contain only alphabets - not spaces, special characters or digits.'\r\n    } else if (fname.validity.valid) {\r\n      fname.id = \"valid\";\r\n      ferror.textContent = \"\";\r\n    } else {\r\n      checkFnError();\r\n    };\r\n  });\r\n  email.addEventListener('input', () => {\r\n    if (email.validity.valid) {\r\n      email.id = \"valid\";\r\n      error.textContent = \"\";\r\n    } else {\r\n      checkEmailError();\r\n    };\r\n  });\r\n  form.addEventListener('submit', (event) => {\r\n    if (!fname.validity.valid) {\r\n      checkFnError();\r\n      event.preventDefault();\r\n    } else if (!email.validity.valid) {\r\n      checkEmailError();\r\n      event.preventDefault();\r\n    };\r\n  });\r\n  const checkFnError = () => {\r\n    if (fname.validity.valueMissing) {\r\n      fname.id = 'invalid';\r\n      ferror.textContent = 'Please fill in this field';\r\n    } else if (fname.validity.tooShort) {\r\n      fname.id = 'invalid';\r\n      ferror.textContent = `This field requires at least ${fname.minLength} letters but received just ${fname.value.length}`;\r\n    };\r\n  };\r\n  const checkEmailError =  () => {\r\n    if (email.validity.valueMissing) {\r\n      email.id = 'invalid';\r\n      error.textContent = 'Please fill in this field';\r\n    } else if (email.validity.tooShort) {\r\n      email.id = 'invalid';\r\n      error.textContent = `This field requires at least ${email.minLength} letters but received just ${email.value.length}`;\r\n    } else if (email.validity.typeMismatch) {\r\n      email.id = 'invalid';\r\n      error.textContent = \"Doesn't match format of an email address\";\r\n    }\r\n  };\r\n  const checkNameRegExp = (name) => {\r\n    const isValid = nameRegExp.test(name.value);\r\n    return isValid;\r\n  }\r\n})();"],"names":["form","document","querySelector","fname","email","ferror","error","nameRegExp","addEventListener","value","length","checkNameRegExp","validity","valid","id","textContent","checkFnError","checkEmailError","event","preventDefault","valueMissing","tooShort","minLength","typeMismatch","name","test"],"sourceRoot":""}