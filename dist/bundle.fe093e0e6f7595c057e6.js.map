{"version":3,"file":"bundle.fe093e0e6f7595c057e6.js","mappings":"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","sources":["webpack://todo-list/./src/js/dom/position.js","webpack://todo-list/./src/js/dom/button.js","webpack://todo-list/./src/js/utils/check-element-in-vp.js","webpack://todo-list/./src/js/index.js"],"sourcesContent":["export function positionGetStarted(element) {\r\n    element.classList.add('first-sticky');\r\n}\r\n\r\nexport function navGetStarted(element) {\r\n    element.classList.add('fixed-nav');\r\n}\r\n\r\nexport function removePosition(element) {\r\n    element.classList.remove('first-sticky');\r\n}\r\nexport function addSticky(element) {\r\n    element.classList.add('sticky');\r\n}\r\nexport function removeNav(element) {\r\n    element.classList.remove('fixed-nav');\r\n}\r\nexport function removeTempNav (element) {\r\n    element.classList.remove('bhdh');\r\n}\r\nexport function addTempNav (element) {\r\n    element.classList.add('bhdh');\r\n}","export const Hover = (function() {\r\n    const btn1 = document.querySelector('.button1');\r\n    const btn2 = document.querySelector('.button2');\r\n    const btn3 = document.querySelector('.button3');\r\n    \r\n    const button1 = () => {\r\n        btn1.id = 'active';\r\n        btn2.id = '';\r\n        btn3.id = '';\r\n    }\r\n    const button2 = () => {\r\n        btn2.id = 'active';\r\n        btn1.id = '';\r\n        btn3.id = '';\r\n    }\r\n    const button3 = () => {\r\n        btn3.id = 'active';\r\n        btn2.id = '';\r\n        btn1.id = '';\r\n    }\r\n    return { button1, button2, button3 };\r\n})();","import { positionGetStarted } from \"../dom/position\";\r\nimport { removePosition } from \"../dom/position\";\r\nimport { navGetStarted } from \"../dom/position\";\r\nimport { removeNav } from \"../dom/position\";\r\nimport { addSticky } from \"../dom/position\";\r\nimport { removeTempNav } from \"../dom/position\";\r\nimport { addTempNav } from \"../dom/position\";\r\nimport { Hover } from \"../dom/button\";\r\n\r\nexport const Viewport = (function() {\r\n    const isInViewport = (element) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio == 1) {\r\n                    positionGetStarted(element);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n    \r\n    const navInViewport = (position, element) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 0.75\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio >= 0.75) {\r\n                    removeNav(element);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(position);\r\n    }\r\n    \r\n    const isNotInViewport = (element, position) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 0.2\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio <= 0.2) {\r\n                    removePosition(position);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n    \r\n    const navNotInViewport = (element, position) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 0.2\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio <= 0.2) {\r\n                    navGetStarted(position);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n    \r\n    const personalInViewport = (element, button, nav) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio === 1) {\r\n                    Hover.button1();\r\n                    positionGetStarted(button);\r\n                    addTempNav(nav);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n    \r\n    const familyInViewport = (element, button, nav) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio == 1) {\r\n                    Hover.button2();\r\n                    positionGetStarted(button);\r\n                    addTempNav(nav);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n    \r\n    const teamInViewport = (element, button, nav) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio == 1) {\r\n                    Hover.button3();\r\n                    positionGetStarted(button);\r\n                    addTempNav(nav);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n\r\n    const lastElementInViewport = (nav, temp, tempSticky, element) => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1\r\n        };\r\n        const callback = (entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.intersectionRatio === 1) {\r\n                    removePosition(temp);\r\n                    addSticky(tempSticky);\r\n                    removeTempNav(nav);\r\n                }\r\n            })\r\n        };\r\n        const observer = new IntersectionObserver(callback, options);\r\n        observer.observe(element);\r\n    }\r\n    return { lastElementInViewport, isInViewport, isNotInViewport, navInViewport, navNotInViewport, personalInViewport, familyInViewport, teamInViewport}\r\n})();","import { Viewport } from \"./utils/check-element-in-vp\";\r\nimport { Hover } from \"./dom/button\";\r\nimport \"../css/index.css\";\r\n\r\nexport const Start = (function() {\r\n    const getStarted = document.querySelector('#first-sticky');\r\n    const tempSticky = document.querySelector('#temp-sticky');\r\n    const stopper = document.querySelectorAll('#enter');\r\n    const button1 = document.querySelector('.button1');\r\n    const button2 = document.querySelector('.button2');\r\n    const button3 = document.querySelector('.button3');\r\n    const nav = document.querySelector('nav');\r\n    const tempNav = document.querySelector('#bdhd');\r\n    const last = document.querySelector('#team-box-last');\r\n    const personalSection = document.querySelectorAll('#you-box-start');\r\n    const familySection = document.querySelectorAll('#family-box-start');\r\n    const teamSection = document.querySelectorAll('#team-box-start');\r\n    \r\n    const welcome = () => {        \r\n        document.addEventListener(\"DOMContentLoaded\", function(){\r\n            document.addEventListener('scroll', () => {\r\n                Viewport.isInViewport(getStarted);\r\n                Viewport.navNotInViewport(tempNav, nav);\r\n                Viewport.lastElementInViewport(tempNav, getStarted, tempSticky, last);\r\n            });\r\n            document.addEventListener('scroll', () => {\r\n                Viewport.isNotInViewport(tempNav, getStarted);\r\n                Viewport.navInViewport(tempNav, nav);\r\n            });\r\n            button1.addEventListener('click', () => {\r\n                Hover.button1();\r\n            });\r\n            button2.addEventListener('click', () => {\r\n                Hover.button2();\r\n            });\r\n            button3.addEventListener('click', () => {\r\n                Hover.button3();\r\n            });\r\n            personalSection.forEach(tab => {\r\n                Viewport.personalInViewport(tab, getStarted, tempNav);\r\n            });\r\n            familySection.forEach(tab => {\r\n                Viewport.familyInViewport(tab, getStarted, tempNav);\r\n            });\r\n            teamSection.forEach(tab => {\r\n                Viewport.teamInViewport(tab, getStarted, tempNav);\r\n            });\r\n            stopper.forEach(tab => {\r\n                Viewport.lastElementInViewport(tempNav, getStarted, tempSticky, tab);\r\n            })\r\n          })\r\n    }\r\n    return { welcome };\r\n})();\r\nStart.welcome();"],"names":["positionGetStarted","element","classList","add","removePosition","remove","addTempNav","Hover","btn1","document","querySelector","btn2","btn3","button1","id","button2","button3","Viewport","nav","temp","tempSticky","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","addSticky","removeTempNav","root","rootMargin","threshold","observe","position","removeNav","navGetStarted","button","getStarted","stopper","querySelectorAll","tempNav","last","personalSection","familySection","teamSection","welcome","addEventListener","tab"],"sourceRoot":""}