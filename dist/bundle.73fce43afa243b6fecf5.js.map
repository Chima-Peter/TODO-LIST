{"version":3,"file":"bundle.73fce43afa243b6fecf5.js","mappings":"oBAEoB,WAClB,MAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAQH,SAASC,cAAc,UAC/BG,EAAQJ,SAASC,cAAc,UAC/BI,EAASL,SAASC,cAAc,WAChCK,EAASN,SAASC,cAAc,WAChCM,EAAQP,SAASC,cAAc,UAC/BO,EAAa,cA+FnB,MAAO,CAAEC,QA7FO,KACdT,SAASU,iBAAiB,oBAAoB,KAC5CR,EAAMS,YAAc,GACtBR,EAAMQ,YAAc,GAClBP,EAAMO,YAAc,GAExBT,EAAMQ,iBAAiB,SAAS,KACF,IAAvBR,EAAMU,MAAMC,QAAmBC,EAAgBZ,GAGzCA,EAAMa,SAASC,OACxBd,EAAMe,GAAK,QACXZ,EAAOM,YAAc,IAErBO,KANAhB,EAAMe,GAAK,UACXZ,EAAOM,YAAc,6FAMtB,IAEHR,EAAMO,iBAAiB,SAAS,KACF,IAAvBP,EAAMS,MAAMC,QAAmBC,EAAgBX,GAGzCA,EAAMY,SAASC,OACxBb,EAAMc,GAAK,QACXX,EAAOK,YAAc,IAErBQ,KANAhB,EAAMc,GAAK,UACXX,EAAOK,YAAc,4FAMtB,IAEHP,EAAMM,iBAAiB,SAAS,KAC1BN,EAAMW,SAASC,OACjBZ,EAAMa,GAAK,QACXV,EAAMI,YAAc,IAEpBS,GACD,IAEHrB,EAAKW,iBAAiB,UAAWW,IAC1BnB,EAAMa,SAASC,MAGRZ,EAAMW,SAASC,MAGfb,EAAMY,SAASC,QACzBK,EAAMC,iBACNH,MAJAC,IACAC,EAAMC,mBAJND,EAAMC,iBACNJ,KA8Ce,MACjB,MAGMK,EAAY,CAAC,MAHLrB,EAAMU,MAGe,MAFpBT,EAAMS,MAE+B,MADtCR,EAAMQ,OAEpBY,aAAaC,WAAW,UACxBD,aAAaE,QAAQ,SAAUC,KAAKC,UAAUL,GAAW,EA5CzDM,EAAY,IAEd,MAAMX,EAAe,KACfhB,EAAMa,SAASe,cACjB5B,EAAMe,GAAK,UACXZ,EAAOM,YAAc,6BACZT,EAAMa,SAASgB,WACxB7B,EAAMe,GAAK,UACXZ,EAAOM,YAAc,gCAAgCT,EAAM8B,uCAAuC9B,EAAMU,MAAMC,SAC/G,EAEGM,EAAe,KACfhB,EAAMY,SAASe,cACjB3B,EAAMc,GAAK,UACXX,EAAOK,YAAc,6BACZR,EAAMY,SAASgB,WACxB5B,EAAMc,GAAK,UACXX,EAAOK,YAAc,gCAAgCR,EAAM6B,uCAAuC7B,EAAMS,MAAMC,SAC/G,EAEGO,EAAmB,KACnBhB,EAAMW,SAASe,cACjB1B,EAAMa,GAAK,UACXV,EAAMI,YAAc,6BACXP,EAAMW,SAASgB,UACxB3B,EAAMa,GAAK,UACXV,EAAMI,YAAc,gCAAgCP,EAAM4B,uCAAuC5B,EAAMQ,MAAMC,UACpGT,EAAMW,SAASkB,eACxB7B,EAAMa,GAAK,UACXV,EAAMI,YAAc,2CACtB,EAEIG,EAAmBoB,GACP1B,EAAW2B,KAAKD,EAAKtB,MAEvC,GACI,EAWL,EAxGmB,GAyGfH,S","sources":["webpack://todo-list/./src/js/form.js"],"sourcesContent":["import \"../css/form.css\";\r\n\r\nexport const Form = (function () {\r\n  const form = document.querySelector('form');\r\n  const fname = document.querySelector('#fname');\r\n  const lname = document.querySelector('#lname');\r\n  const email = document.querySelector('#email');\r\n  const ferror = document.querySelector('#ferror');\r\n  const lerror = document.querySelector('#lerror');\r\n  const error = document.querySelector('#error');\r\n  const nameRegExp = /^[a-zA-Z]+$/;\r\n\r\n  const welcome = () => {\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n      fname.textContent = '';\r\n    lname.textContent = '';\r\n      email.textContent = '';\r\n\r\n  fname.addEventListener('input', () => {\r\n    if ((fname.value.length !== 0) && (!checkNameRegExp(fname))) {\r\n      fname.id = 'invalid';\r\n      ferror.textContent = 'First name field should contain only alphabets - not spaces, special characters or digits.'\r\n    } else if (fname.validity.valid) {\r\n      fname.id = \"valid\";\r\n      ferror.textContent = \"\";\r\n    } else {\r\n      checkFnError();\r\n    };\r\n  });\r\n  lname.addEventListener('input', () => {\r\n    if ((lname.value.length !== 0) && (!checkNameRegExp(lname))) {\r\n      lname.id = 'invalid';\r\n      lerror.textContent = 'Last name field should contain only alphabets - not spaces, special characters or digits.'\r\n    } else if (lname.validity.valid) {\r\n      lname.id = \"valid\";\r\n      lerror.textContent = \"\";\r\n    } else {\r\n      checkLnError();\r\n    };\r\n  });\r\n  email.addEventListener('input', () => {\r\n    if (email.validity.valid) {\r\n      email.id = \"valid\";\r\n      error.textContent = \"\";\r\n    } else {\r\n      checkEmailError();\r\n    };\r\n  });\r\n  form.addEventListener('submit', (event) => {\r\n    if (!fname.validity.valid) {\r\n      event.preventDefault();\r\n      checkFnError();\r\n    } else if (!email.validity.valid) {\r\n      checkEmailError();\r\n      event.preventDefault();\r\n    } else if (!lname.validity.valid) {\r\n      event.preventDefault()\r\n      checkLnError();\r\n    };\r\n    saveValues();\r\n  });\r\n  const checkFnError = () => {\r\n    if (fname.validity.valueMissing) {\r\n      fname.id = 'invalid';\r\n      ferror.textContent = 'Please fill in this field';\r\n    } else if (fname.validity.tooShort) {\r\n      fname.id = 'invalid';\r\n      ferror.textContent = `This field requires at least ${fname.minLength} letters but received just ${fname.value.length}`;\r\n    };\r\n  };\r\n  const checkLnError = () => {\r\n    if (lname.validity.valueMissing) {\r\n      lname.id = 'invalid';\r\n      lerror.textContent = 'Please fill in this field';\r\n    } else if (lname.validity.tooShort) {\r\n      lname.id = 'invalid';\r\n      lerror.textContent = `This field requires at least ${lname.minLength} letters but received just ${lname.value.length}`;\r\n    };\r\n  };\r\n  const checkEmailError =  () => {\r\n    if (email.validity.valueMissing) {\r\n      email.id = 'invalid';\r\n      error.textContent = 'Please fill in this field';\r\n    } else if (email.validity.tooShort) {\r\n      email.id = 'invalid';\r\n      error.textContent = `This field requires at least ${email.minLength} letters but received just ${email.value.length}`;\r\n    } else if (email.validity.typeMismatch) {\r\n      email.id = 'invalid';\r\n      error.textContent = \"Doesn't match format of an email address\";\r\n    }\r\n  };\r\n  const checkNameRegExp = (name) => {\r\n    const isValid = nameRegExp.test(name.value);\r\n    return isValid;\r\n  }\r\n    });\r\n  }\r\n  const saveValues = () => {\r\n    const first = fname.value;\r\n    const second = lname.value;\r\n    const third = email.value;\r\n    const loginData = {'fname': first, 'lname': second, 'email': third};\r\n    localStorage.removeItem('logins');\r\n    localStorage.setItem('logins', JSON.stringify(loginData));\r\n  }\r\n  return { welcome };\r\n})();\r\nForm.welcome();\r\n"],"names":["form","document","querySelector","fname","lname","email","ferror","lerror","error","nameRegExp","welcome","addEventListener","textContent","value","length","checkNameRegExp","validity","valid","id","checkFnError","checkLnError","checkEmailError","event","preventDefault","loginData","localStorage","removeItem","setItem","JSON","stringify","saveValues","valueMissing","tooShort","minLength","typeMismatch","name","test"],"sourceRoot":""}